---

- name: Get apt repository updates
  apt:
    update_cache: yes
  become: yes

- name: Install general-use packages
  apt:
    pkg: "{{ item }}"
    state: present
  loop:
    - net-tools
    - nfs-common
    - tree
    - gpg
    - curl
    - wget
  become: yes

- name: Set VM Hostname
  hostname:
    name: "{{ ansible_host }}"
  become: yes

- name: Configure sshd
  lineinfile:
    path: "/etc/ssh/sshd_config"
    regex: "^#.*{{item.key}}"
    line: "{{item.key}} {{item.value}}"
    state: present
  loop:
    - { key: "PermitRootLogin", value: "no" }
    - { key: "PasswordAuthentication", value: "no" } 
  notify:
    - restart ssh
  become: yes

# Create and configure personal user 
- name: Create and configure personal user
  user:
    name: "{{ admin_user }}"
    shell: /bin/bash
  become: yes

- name: Set authorized key
  ansible.posix.authorized_key:
    user: "{{ admin_user }}"
    state: present
    key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
  become: yes
  
# Allow user to sudo without password prompt
- name: Add user to sudoers
  community.general.sudoers:
    name: "{{ admin_user }}"
    user: "{{ admin_user }}"
    commands: ALL
    nopassword: true
  become: yes


## Network Setup

- name: Get interface name
  shell:
    cmd: awk '/iface/{ifname=$2; if (ifname != "lo") print ifname }' /etc/network/interfaces
  become: yes
  register: interface_result

- name: Get IPv4 Address
  shell:
    cmd: "ip -4 addr show {{ interface_result.stdout }} | awk '/inet/{print $2}'"
  register: ipv4_result

- name: Get IPv6 Address
  shell:
    cmd: "ip -6 addr show {{ interface_result.stdout }} | awk '/inet/{print $2}'"
  register: ipv6_result

- name: Set variables for Interface and IPs
  set_fact:
    interface_name: "{{ interface_result.stdout }}"
    ipv4_address: "{{ ipv4_result.stdout | split('/') | first }}"
    ipv6_address: "{{ ipv6_result.stdout | split('/') | first }}"

- name: Debug
  debug: 
    msg: 
      - "interface_name = {{ interface_name }}"
      - "ipv4_address = {{ ipv4_address }}"
      - "ipv6_address = {{ ipv6_address }}"

# - name: Configure DNS Server and Static IP 
#   template:
#     src: "interfaces.j2"
#     dest: "/etc/network/interfaces"
#     owner: "root"
#     group: "root"
#     mode: 0664
#   become: yes
#   notify:
#     - restart networking


# For this next section, we want apply any increases in disk size to the VM
# Default is generally 8GB as at time of writing, so any new VM provisioned will likely be given more
# Steps taken from: https://bookstack.qflash.org/books/proxmox/page/increase-vm-disk-size

- name: Get disk device name (e.g /dev/sda3)
  shell:
    cmd: lvmdiskscan -l | grep "/dev/" | awk '{print $1}'
  become: yes
  register: device_info

- name: Get disk device name (e.g /dev/sda3)
  shell:
    cmd: df --type=ext4 | grep '/$' | awk '{print $1}'
  become: yes
  register: filesystem_name_output

- name: Set variables for partition
  set_fact:
    device_name: "{{ device_info.stdout[:8] }}"
    device_number: "{{ device_info.stdout[-1:] }}"
    filesystem_name: "{{ filesystem_name_output.stdout }}"

- name: Debug
  debug: 
    msg: 
      - "device_name = {{ device_name }}"
      - "device_number = {{ device_number }}"
      - "filesystem_name = {{ filesystem_name }}"

- name: Increase Partition Size
  shell:
    cmd: "sudo growpart {{ device_name }} {{ device_number }}"
  ignore_errors: true
  become: yes

- name: Resize Volume
  shell:
    cmd: "sudo pvresize {{ device_name }}{{ device_number }}"
  become: yes

- name: Extend the logical volume and resize
  shell:
    cmd: "sudo lvextend -l +100%FREE {{ filesystem_name }} --resize"
  become: yes































# - name: Grow partition until maximum
#   parted:
#     device: "/dev/sda"
#     number: "3"
#     label: gpt
#     state: present
#   become: yes

# - name: Resize existing pv
#   community.general.lvg:
#     vg: "ubuntu-vg"
#     pvs: "/dev/sda3"
#     pvresize: yes
#   become: yes

# - name: Extend the logical volume to consume all remaining space in the volume group
#   community.general.lvol:
#     vg: "ubuntu-vg"
#     lv: "ubuntu-lv"
#     size: +100%FREE
#     resizefs: true
#   become: yes

# - name: Increase Partition Size
#   shell:
#     cmd: "growpart {{ disk_info.stdout[:-1] }} {{ disk_info.stdout[-8:] }}" 
#   become: yes

